/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.openrtb.common.api;  
@SuppressWarnings("all")
public class Geo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = org.apache.avro.Schema.parse("{\"type\":\"record\",\"name\":\"Geo\",\"namespace\":\"org.openrtb.common.api\",\"fields\":[{\"name\":\"lat\",\"type\":[\"float\",\"null\"]},{\"name\":\"lon\",\"type\":[\"float\",\"null\"]},{\"name\":\"country\",\"type\":[\"string\",\"null\"]},{\"name\":\"region\",\"type\":[\"string\",\"null\"]},{\"name\":\"regionfips104\",\"type\":[\"string\",\"null\"]},{\"name\":\"metro\",\"type\":[\"string\",\"null\"]},{\"name\":\"city\",\"type\":[\"string\",\"null\"]},{\"name\":\"zip\",\"type\":[\"string\",\"null\"]},{\"name\":\"type\",\"type\":[\"int\",\"null\"]},{\"name\":\"ext\",\"type\":[\"string\",\"null\"]}]}");
  public java.lang.Float lat;
  public java.lang.Float lon;
  public java.lang.CharSequence country;
  public java.lang.CharSequence region;
  public java.lang.CharSequence regionfips104;
  public java.lang.CharSequence metro;
  public java.lang.CharSequence city;
  public java.lang.CharSequence zip;
  public java.lang.Integer type;
  public java.lang.CharSequence ext;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return lat;
    case 1: return lon;
    case 2: return country;
    case 3: return region;
    case 4: return regionfips104;
    case 5: return metro;
    case 6: return city;
    case 7: return zip;
    case 8: return type;
    case 9: return ext;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: lat = (java.lang.Float)value$; break;
    case 1: lon = (java.lang.Float)value$; break;
    case 2: country = (java.lang.CharSequence)value$; break;
    case 3: region = (java.lang.CharSequence)value$; break;
    case 4: regionfips104 = (java.lang.CharSequence)value$; break;
    case 5: metro = (java.lang.CharSequence)value$; break;
    case 6: city = (java.lang.CharSequence)value$; break;
    case 7: zip = (java.lang.CharSequence)value$; break;
    case 8: type = (java.lang.Integer)value$; break;
    case 9: ext = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
}
